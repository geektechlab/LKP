list_add_tail
==============

To add a node to the end of the linked list:

list_add_tail(struct list_head *new, struct list_head *head);

static inline void __list_add(struct list_head *new,
                              struct list_head *prev,
                              struct list_head *next)
{
        if (!__list_add_valid(new, prev, next))
                return;

        next->prev = new;
        new->next = next;
        new->prev = prev;
        WRITE_ONCE(prev->next, new);
}

static inline void list_add(struct list_head *new, struct list_head *head)
{
        __list_add(new, head, head->next);
}


static inline void list_add_tail(struct list_head *new, struct list_head *head)
{
        __list_add(new, head->prev, head);
}


struct mylist
{
        int data;
        struct list_head list;
};

LIST_HEAD(listhead);

struct mylist *node1 = kmalloc(sizeof(struct mylist), GFP_KERNEL);
node1->data = 1;
list_add_tail(&node1->list, &listhead);


               ------------------------------------
                |                                   |
                |               --------------      |
                |               |1            |     |
                V               |             |     |
        -------------------     |-------------|     |
        |prev   | next    |<--- |prev  |next  |     |
   -----|       |         |     |      |      |------
   |    -------------------      -------------
   |        listhead              node1 ^
   |                                    |
   -------------------------------------


struct mylist *node2 = kmalloc(sizeof(struct mylist), GFP_KERNEL);
node2->data = 1;
list_add_tail(&node2->list, &listhead);

                -------------------------------------------------------------
                |                                                           |
                |               --------------       --------------         |
                |               |1            |      |2           |         |
                V               |             |      |            |         |
        -------------------     |-------------|      |-------------         |
        |prev   | next    |<--->|prev  |next  |<---->|prev  |next |---------
   -----|       |         |     |      |      |      |      |     |
   |    -------------------      -------------        -------------
   |        listhead              node1              node2 ^
   |                                                       |
   |                                                       |
   ---------------------------------------------------------

This is good for implementing a queue
