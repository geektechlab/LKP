Change the state of the process
=================================

You don't need to fiddle with current->state.

prepare_to_wait() and finish_wait() will do that

void prepare_to_wait(struct wait_queue_head *wq_head, struct wait_queue_entry *wq_entry, int state);

void prepare_to_wait_exclusive(struct wait_queue_head *wq_head, struct wait_queue_entry *wq_entry, int state);

The above functions set the process state to the value passed as the third parameter

Running prepare_to_wait() when you're already on the waitqueue_head is fine

After this, we schedule out the process by invoking the schedule() API.

Cleaning up
===============

Once schedule returns, it is cleanup time.

void finish_wait(wait_queue_head_t *queue, wait_queue_t *wait);

DEFINE_WAIT(wait);

prepare_to_wait(wq_head, &wait, TASK_UNINTERRUPTIBLE);
if (!condition)
	schedule();
finish_wait(wq_head, &wait);
