===============================
Major and Minor Number
===============================

-->     Connection between the application and the device file is based on the name of the device file.
-->     However the connection between the device file and the device driver is based on the number of the device file, not the name.

A device ID/number consists of two parts
	Major Number : identifies the device type (IDE disk, SCSI disk, serial port, etc.)
	Minor Number : identifies the device (first disk, second serial port, etc.)

-->	Most times, the major identifies the driver, while the minor identifies each physical device served by the driver.

ls -l /dev/ttyS*
crw-rw---- 1 root dialout 4, 64 Apr 12 23:18 /dev/ttyS0
crw-rw---- 1 root dialout 4, 65 Apr 12 23:18 /dev/ttyS1
crw-rw---- 1 root dialout 4, 74 Apr 12 23:18 /dev/ttyS10
crw-rw---- 1 root dialout 4, 75 Apr 12 23:18 /dev/ttyS11
crw-rw---- 1 root dialout 4, 76 Apr 12 23:18 /dev/ttyS12
crw-rw---- 1 root dialout 4, 77 Apr 12 23:18 /dev/ttyS13
crw-rw---- 1 root dialout 4, 78 Apr 12 23:18 /dev/ttyS14

The special character files are identified by the c character in the first column of the command output, and the block type by the character b

In columns 5 and 6 of the result you can see the major, respectively the minor for each device.

Certain major identifiers are statically assigned to devices (in the Documentation/admin-guide/devices.txt file from the kernel sources).

When choosing the identifier for a new device, you can use two methods
	static (choose a number that does not seem to be used already)
	dynamic (kernel will give you a device number)

Data Type
============

A device ID/number is represented using the type dev_t.

12 bit major number + 20 bit Minor number =32 bit dev_t

To obtain the major or minor parts of a dev_t, use:

	MAJOR(dev_t dev);
	MINOR(dev_t dev);

To create a device number from major and minor number:

     MKDEV(int major, int minor);

Header File: linux/kdev_t.h
